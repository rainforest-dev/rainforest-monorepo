---
import {
  Experience,
  Nav,
  OneColumns,
  ScrollToTop,
  ThreeColumns,
} from '@components/home';
import Layout from '@layouts/index.astro';
import { IHeroProps } from '@types';
import { getBrandIconName } from '@utils';
import { hero, info, skills } from '@utils/constants';
import { useTranslation } from '@utils/i18n';
import clsx from 'clsx';

const { lang } = Astro.params;
const { t } = await useTranslation(lang, 'home');

const heroProps: IHeroProps = {
  name: {
    first: t('info-name-first', { context: 'informal' }),
    last: t('info-name-last', { context: 'informal' }),
    fullname: t('info-fullname', { context: 'informal' }),
  },
  dateOfBirth: new Date(info.dateOfBirth),
  jobPosition: t('info-job-position'),
  location: {
    city: t('info-location', { context: 'city' }),
    country: t('info-location', { context: 'country' }),
  },
  summaries: [
    t('home:hero-summaries.0'),
    t('home:hero-summaries.1'),
    t('home:hero-summaries.2'),
  ],
  tags: hero.tags,
};
---

<Layout title="Hello! I'm Rainforest">
  <main class="contents">
    <Nav client:load />
    <ScrollToTop client:load />
    <!-- hero -->
    <section class="flex-center container h-screen xl:flex! hidden!">
      <ThreeColumns {...heroProps} />
    </section>
    <section class="flex! xl:hidden! w-full bg-surface">
      <OneColumns {...heroProps} />
    </section>
    <!-- experience -->
    <section id="experience" class="py-10 sm:h-screen">
      <div class="container flex-col-center size-full">
        <h2 class="text-4xl mb-10">{t('experience')}</h2>
        <Experience client:only="react" />
      </div>
    </section>
    <section id="skills" class="py-10 min-h-screen">
      <div class="container">
        <h2 class="text-4xl mb-10">Skills</h2>
        <ul class="grid md:grid-cols-2 xl:grid-cols-3 gap-4 xl:gap-8">
          {
            skills.map((skill) => (
              <li
                class={clsx(
                  'min-w-80 bg-surface-variant text-on-surface-variant px-5 py-4 rounded min-h-80 shadow flex flex-col gap-5 relative',
                  skill.description.length > 2 && 'md:col-span-2'
                )}
              >
                <h3 class="text-xl capitalize">{t(skill.key)}</h3>
                {Array.isArray(skill.description) ? (
                  <ul class="list-disc pl-[1em]">
                    {skill.description.map((item) => (
                      <li>{t(item)}</li>
                    ))}
                  </ul>
                ) : (
                  <p>{t(skill.description)}</p>
                )}
                <iconify-icon
                  icon={getBrandIconName(skill.key)}
                  class="absolute right-5 bottom-4 size-12"
                  height="none"
                />
              </li>
            ))
          }
        </ul>
      </div>
    </section>
  </main>
  <style>
    html {
      @apply snap-y snap-mandatory scroll-smooth;
    }
    main > section {
      @apply snap-always snap-start;
    }
    @media (width < 80rem) {
      html,
      body {
        background-color: var(--color-on-surface);
      }
      section:not(:first-child) {
        background-color: var(--color-surface);
      }
    }
  </style>
</Layout>
