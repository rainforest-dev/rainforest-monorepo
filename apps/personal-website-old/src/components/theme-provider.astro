---
import { argbFromHex, hexFromArgb } from '@material/material-color-utilities';
import {
  getSchemeProperties,
  themeFromSourceColor,
} from '@rainforest-dev/rainforest-ui';
import { persistentKey } from '@stores';
import { defaultSourceColor } from '@utils/constants';

const sourceColor =
  Astro.cookies.get(persistentKey)?.value ?? defaultSourceColor;
const theme = themeFromSourceColor(argbFromHex(sourceColor));
const getSchemeStyles = (properties: { [key: string]: number }) => {
  return Object.entries(properties)
    .map(([k, v]) => `${k}: ${hexFromArgb(v)};`)
    .join('\n');
};
const lightSchemeProperties = getSchemeProperties(theme.schemes.light);
const darkSchemeProperties = getSchemeProperties(theme.schemes.dark);
const lightSchemeStyles = getSchemeStyles(lightSchemeProperties);
const darkSchemeStyles = getSchemeStyles(darkSchemeProperties);
const themeColorLight = hexFromArgb(
  lightSchemeProperties['--md-sys-color-surface']
);
const themeColorDark = hexFromArgb(
  darkSchemeProperties['--md-sys-color-surface']
);

const styleRaw = `
  @layer theme, base, components, utilities, app;
  @layer app {
    @media (prefers-color-scheme: light) {
      :root {
        ${lightSchemeStyles}
      }
    }
    @media (prefers-color-scheme: dark) {
      :root {
        ${darkSchemeStyles}
      }
    }
    [data-scheme='light'] {
      ${lightSchemeStyles}
    }
    [data-scheme='dark'] {
      ${darkSchemeStyles}
    }
  }
`;
---

<meta
  name="theme-color"
  media="(prefers-color-scheme: light)"
  content={themeColorLight}
/>
<meta
  name="theme-color"
  media="(prefers-color-scheme: dark)"
  content={themeColorDark}
/>
<style is:inline set:html={styleRaw}></style>
<script>
  import { $sourceColor, persistentKey } from '@stores';
  import Cookies from 'js-cookie';
  const sourceColor = $sourceColor.get();
  if (sourceColor) {
    Cookies.set(persistentKey, sourceColor);
  }
</script>
<!-- <script>
  import { sourceColor, updateColorScheme } from '@stores';
  import { applyTheme } from '@utils/md3-utilities';

  window
    .matchMedia('(prefers-color-scheme: dark)')
    .addEventListener('change', (e) => {
      const dark = e.matches;
      updateColorScheme(dark);
      if (sourceColor.value) applyTheme(sourceColor.value, dark);
    });
</script> -->
